- name: Install Mongodb
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable default Node.js module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable Node.js 20 module
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: Create roboshop user
    ansible.builtin.user:
      name: roboshop
      state: present

  - name: Create /app directory
    ansible.builtin.file:
      path: /app
      state: directory
      mode: '0755'

  - name: Download catalogue.zip to /tmp
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: Unzip catalogue.zip into /app
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Run npm install in /app directory
    ansible.builtin.command: npm install
    args:
     chdir: /app
  
  - name: Create service file
    ansible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service

  - name: Reload systemd daemon
    ansible.builtin.shell: systemctl daemon-reload

  - name: Enable catalogue service
    ansible.builtin.systemd:
     name: catalogue
     enabled: yes

  - name: Start catalogue service
    ansible.builtin.systemd:
     name: catalogue
     state: started
 
  - name: copy mongoclient repo
    ansible.builtin.copy:
     src: mongoclient.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: Install mongoclient
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present
  
  - name: Load MongoDB data from master-data.js
    ansible.builtin.shell: mongosh --host 172.31.21.142 < /app/db/master-data.js



  
  


